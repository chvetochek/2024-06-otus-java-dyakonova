/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ru.otus;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class HelloOtus {
    private static final Logger logger = LoggerFactory.getLogger(HelloOtus.class);
    private String lastThread = "t2";
    private int number = 1;
    private boolean limit = false;
    private final static int MAX_VALUE = 10;
    private final static int MIN_VALUE = 1;

    public static void main(String... args) {
        HelloOtus pingPong = new HelloOtus();
        new Thread(() -> pingPong.action("t1")).start();
        new Thread(() -> pingPong.action("t2")).start();
    }

    private synchronized void action(String thread) {
        while (!Thread.currentThread().isInterrupted()) {
            try {
                while (lastThread.equals(thread)) {
                    this.wait();
                }

                logger.info(thread + ": " + number);
                if (lastThread.equals("t1")) {
                    if (number >= MAX_VALUE) {
                        limit = true;
                    } else if (number <= MIN_VALUE) {
                        limit = false;
                    }

                    if (!limit) {
                        number++;
                    } else {
                        number--;
                    }
                }
                lastThread = thread;
                sleep();
                notifyAll();
            } catch (InterruptedException ex) {
                Thread.currentThread().interrupt();
            }
        }
    }

    private static void sleep() {
        try {
            Thread.sleep(500);
        } catch (InterruptedException e) {
            logger.error(e.getMessage());
            Thread.currentThread().interrupt();
        }
    }
}
