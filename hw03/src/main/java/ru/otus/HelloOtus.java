/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ru.otus;

import ru.otus.annotations.After;
import ru.otus.annotations.Before;
import ru.otus.annotations.Test;

import java.lang.reflect.Method;
import java.util.ArrayList;

@SuppressWarnings("java:S106")
public class HelloOtus {
    public static void main(String... args) {
        run("ru.otus.ExampleTest");
    }

    public static void run(String className) {
        try {
            var clazz = Class.forName(className);
            var allMethods = clazz.getDeclaredMethods();
            var constructor = clazz.getConstructor();
            var object = constructor.newInstance();
            var beforeMethods = new ArrayList<Method>();
            var testMethods = new ArrayList<Method>();
            var afterMethods = new ArrayList<Method>();
            for (var method : allMethods) {
                if (method.getDeclaredAnnotation(Before.class) != null) {
                    beforeMethods.add(method);
                }
                if (method.getDeclaredAnnotation(Test.class) != null) {
                    testMethods.add(method);
                }
                if (method.getDeclaredAnnotation(After.class) != null) {
                    afterMethods.add(method);
                }
            }

            for (var beforeMethod : beforeMethods) {
                beforeMethod.invoke(object);
            }

            var totalTestCount = testMethods.size();
            var passedTestsCount = 0;
            var failedTestsCount = 0;
            for (var testMethod : testMethods) {
                try {
                    testMethod.invoke(object);
                    passedTestsCount ++;
                } catch (Exception e) {
                    failedTestsCount ++;
                }
            }

            for (var afterMethod : afterMethods) {
                afterMethod.invoke(object);
            }

            printReport(totalTestCount, passedTestsCount, failedTestsCount);
        } catch (Exception e) {
            throw new RuntimeException(e);
        }

    }

    private static void printReport(int totalTestCount, int passedTestsCount, int failedTestsCount) {
        System.out.println("Всего тестов: "  + totalTestCount);
        System.out.println("Успешных тестов: "  + passedTestsCount);
        System.out.println("Неуспешных тестов: " + failedTestsCount);
    }
}
